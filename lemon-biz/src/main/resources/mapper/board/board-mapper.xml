<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
	<select id="selectBoardMapList" resultMap="boardMap">
		 select *
        	from ( select rownum as rnum, v.* 
        			from ( select(select count(*) 
        						from attachment 
        							where post_key = P.key)file_count,P.*,(select name from member M where M.member_id = P.mem_id) name,(select count(*) from good G where G.post_key = P.key )count,
        							(select count(*) from board_comment B where B.board_ref = P.key) board_comment_cnt 
        		from post P 
        			where categ_key=1 
        				order by is_notice desc,key desc)v)v
        			where rnum between #{startRnum} and #{endRnum}
	</select>

	<resultMap type="map" id="boardMap">
  		<id column="key" property="key"/>
  		<result column="mem_id" property="memId"/>
  		<result column="categ_key" property="categKey"/>
  		<result column="title" property="title"/>
  		<result column="content" property="content"/>
  		<result column="post_date" property="postDate"/>
  		<result column="is_notice" property="isNotice"/>
  		<result column="is_deleted" property="isDeleted"/>
  		<result column="read_count" property="readCount"/>
  		<result column="dept_key" property="deptKey"/>
  		<result column="name" property="name"/>
  		<result column="count" property="count"/>
  		<result column="board_comment_cnt" property="boardCommentCnt"/>
  		<result column="file_count" property="fileCount"/>
  		<result column="startRnum" property="startRnum"/>
  		<result column="endRnum" property="endRnum"/>
  		<result column="cPage" property="cPage"/>
  		<result column="numPerPage" property="numPerPage"/>
  	</resultMap>
  	
	<select id="selectBoardList" resultType="board">
	 select
    		rownum  ,P.*,
			    (select 
			        count(*)
			    from 
			        attachment
			    where
		        post_key = P.key) file_count
		from
   			 (select * from post 
   		where categ_key=1
		order by
		is_notice desc,key desc)P
	WHERE RN BETWEEN #{startRnum} AND #{endRnum}
	</select>
	
  	
  	<insert id="insertBoard">
  	insert into
			post
		values(
			seq_post_key.nextval,
			#{ memId },
			 1,
			#{ title },
			#{ content },
			default,
			#{ isNotice },
			default,
			default,
			null	
		)
		<selectKey order="AFTER" resultType="_int" keyProperty="key">
			select
				seq_post_key.currval
			from 
				dual
		</selectKey>
  	</insert>
  
  	<insert id="insertAttachment">
  		insert into 
			attachment
		values (
			seq_attachment_key.nextval, 
			#{ postKey },
			null,
			null,
			null,
			#{ originName },
			#{ reName },
			default,
			default
		)	
		
  	</insert>
  	
  	<select id="selectOneBoard" resultType="board">
		select
			*
		from
			post
		where 
			key = #{ key }
	</select>
	
	<select id="selectAttachList" resultType="attachment">
		select
			*
		from
			attachment
		where 
			post_key= #{ postKey } 
	</select>
  
  <select id="selectOneBoardCollection" resultMap="boardCollectionMap">
 	  select
		    P.*,
		    A.key as "attach_key",
		    A.post_key,
		    A.origin_name,
		    A.re_name,
		    A.upload_date,
		    A.download_cnt,(select name from member M where M.member_id = p.mem_id) name
		from 
		    post P
		        left join attachment A
		            on P.key= A.post_key
		where
		    P.key= #{ postKey }
  
  </select>
  
  <resultMap type="board" id="boardCollectionMap">
  		<id column="key" property="key"/>
  		<result column="mem_id" property="memId"/>
  		<result column="categ_key" property="categKey"/>
  		<result column="title" property="title"/>
  		<result column="content" property="content"/>
  		<result column="post_date" property="postDate"/>
  		<result column="is_notice" property="isNotice"/>
  		<result column="is_deleted" property="isDeleted"/>
  		<result column="read_count" property="readCount"/>
  		<result column="name" property="name"/>
  		
  		<collection property="attachList" ofType="attachment">
  			<id column="attach_key" property="key"/>
  			<result column="post_key" property="postKey"/>
  			<result column="approval_key" property="appovalKey"/>
  			<result column="mem_id" property="memId"/>
  			<result column="mail_key" property="mailKey"/>
  			<result column="origin_name" property="originName"/>
  			<result column="re_name" property="reName"/>
  			<result column="upload_date" property="uploadDate"/>
  			<result column="download_cnt" property="downloadCnt"/>
  		</collection>
  	</resultMap>
  	
  	<select id="selectOneAttachment" resultType="attachment">
  		select
			*
		from 
			attachment
		where
			key = #{ key }
  	
  	</select>
  	
  	<update id="increaseReadConut">
  		update post set
	    read_count = read_count +1
	    where key = #{ key }
  	</update>
  	
  	<update id="updateBoard">
  	update post set
  		title = #{ title },
  		content = #{ content },
  		is_notice = #{ isNotice }
  		where key = #{ key }
  	</update>
  	
  	<select id="countBoard" resultType="_int">
  		SELECT COUNT(*) as "cnt" FROM POST where categ_key=1
  	</select>
  	
  	<insert id="boardInsert">
  	insert into board_comment (board_comment_no, board_comment_level, board_comment_writer, board_comment_content, board_ref, board_comment_ref, board_comment_date)
  	 values(seq_board_comment_no.nextval, 
  	 		#{ boardCommentLevel }, 
  	 		#{ boardCommentWriter },
  	 		#{ boardCommentContent },
  	 		#{ boardRef },
  	 		<if test="boardCommentRef == 0 ">
  	 		 null,
  	 		</if>
  	 		<if test=" boardCommentRef != 0">
  	 		#{ boardCommentRef },
  	 		</if>
  	 		 default)
  	</insert>
  	
  	<select id="selectCommentList" resultType="BoardComment">
	  	select
	  		 BC.*,(select name from member M where M.member_id = BC.board_comment_writer) name
		from
			 board_comment BC
		where board_ref = #{ key }
			start with board_comment_level = 1
			connect by board_comment_ref = prior board_comment_no
		order siblings by board_comment_no

  	</select>
  	
  	<delete id="boardDelete">
  		delete 
  			from board_comment 
  		where 
  			board_comment_no = #{ boardCommentNo }
  	</delete>
  	
  	<delete id="boardfrmDelete">
  		delete 
  			from post
  		where key = #{ key }
  	</delete>
  	
  	<delete id="boardFileDelete">
  		delete 
  		from attachment 
  		where post_key = #{ key }
  	</delete>
  	
  	<select id="selectTeamBoardMapList" resultMap="boardTeam">
  	select
    		P.*,D.*,
			    (select 
			        count(*)
			    from 
			        attachment
			    where
		        post_key = P.key) file_count,(select name from member M where M.member_id = P.mem_id) name1,(select count(*) from good G where G.post_key = P.key )count,
		        (select count(*) from board_comment B where B.board_ref = P.key) board_comment_cnt
		from
   			 post P left join dept D on P.dept_key = D.key
   		where P.categ_key=2  and  P.dept_key = #{deptKey}
		order by
			P.is_notice desc,P.key desc
  	</select>
  	
  	<resultMap type="map" id="boardTeam">
  		<id column="key" property="key"/>
  		<result column="mem_id" property="memId"/>
  		<result column="categ_key" property="categKey"/>
  		<result column="title" property="title"/>
  		<result column="content" property="content"/>
  		<result column="post_date" property="postDate"/>
  		<result column="is_notice" property="isNotice"/>
  		<result column="is_deleted" property="isDeleted"/>
  		<result column="read_count" property="readCount"/>
  		<result column="dept_key" property="deptKey"/>
  		<result column="name" property="name"/>
  		<result column="name1" property="name1"/>
  		<result column="count" property="count"/>
  		<result column="board_comment_cnt" property="boardCommentCnt"/>
  		<result column="file_count" property="fileCount"/>
  	</resultMap>
  	
  	<insert id="insertTeamBoard">
  		insert into
			post
		values(
			seq_post_key.nextval,
			#{ memId },
			 2,
			#{ title },
			#{ content },
			default,
			#{ isNotice },
			default,
			default,
			#{ deptKey }	
		)	
		<selectKey order="AFTER" resultType="_int" keyProperty="key">
			select
				seq_post_key.currval
			from 
				dual
		</selectKey>
  	</insert>
  	
  	<select id="boardSearch" resultMap="boardMap">
  	  select * 
        	from ( select rownum as rnum, v.* 
        			from ( select(select count(*) 
        						from attachment 
        							where post_key = P.key)file_count,P.*,(select name from member M where M.member_id = P.mem_id) name
        		from post P 
        			where categ_key=1  and mem_id like '%'||#{ searchKeyword }||'%'
        				order by is_notice desc,key desc)v)v
        			where rnum between #{startRnum} and #{endRnum}
  	</select>
  	
  	<select id="selectMaList" resultMap="boardMa">
  	select *
        	from ( select rownum as rnum, v.* 
        			from ( select(select count(*) 
        						from attachment 
        							where post_key = P.key)file_count,P.*,(select name from member M where M.member_id = P.mem_id) name,(select count(*) from good G where G.post_key = P.key )count,
        							(select count(*) from board_comment B where B.board_ref = P.key) board_comment_cnt
        		from post P 
        			where categ_key=3 
        				order by is_notice desc,key desc)v)v
        			where rnum between #{startRnum} and #{endRnum}
  	</select>
  	<resultMap type="map" id="boardMa">
  		<id column="key" property="key"/>
  		<result column="mem_id" property="memId"/>
  		<result column="categ_key" property="categKey"/>
  		<result column="title" property="title"/>
  		<result column="content" property="content"/>
  		<result column="post_date" property="postDate"/>
  		<result column="is_notice" property="isNotice"/>
  		<result column="is_deleted" property="isDeleted"/>
  		<result column="read_count" property="readCount"/>
  		<result column="dept_key" property="deptKey"/>
  		<result column="name" property="name"/>
  		<result column="count" property="count"/>
  		<result column="board_comment_cnt" property="boardCommentCnt"/>
  		<result column="file_count" property="fileCount"/>
  		<result column="startRnum" property="startRnum"/>
  		<result column="endRnum" property="endRnum"/>
  		<result column="cPage" property="cPage"/>
  		<result column="numPerPage" property="numPerPage"/>
  	</resultMap>
  	
  	<insert id="insertMaBoard">
  	insert into
			post
		values(
			seq_post_key.nextval,
			#{ memId },
			 3,
			#{ title },
			#{ content },
			default,
			1,
			default,
			default,
			null	
		)
		<selectKey order="AFTER" resultType="_int" keyProperty="key">
			select
				seq_post_key.currval
			from 
				dual
		</selectKey>
  	</insert>
  	
  	<select id="boardtitleSearch" resultMap="boardMap">
  	 select * 
        	from ( select rownum as rnum, v.* 
        			from ( select(select count(*) 
        						from attachment 
        							where post_key = P.key)file_count,P.*,(select name from member M where M.member_id = P.mem_id) name
        		from post P 
        			where categ_key=1  and title like '%'||#{ searchKeyword }||'%' 
        				order by is_notice desc,key desc)v)v
        			where rnum between #{startRnum} and #{endRnum}
  	</select>
  	
  	<select id="boardTeamSearch" resultMap="boardTeam">
  	select
    		P.*,
			    (select 
			        count(*)
			    from 
			        attachment
			    where
		        post_key = P.key) file_count,(select name from member M where M.member_id = P.mem_id) name1
		from
   			 post P
   		where categ_key=2
        and mem_id like '%'||#{ searchKeyword }||'%' and dept_key = #{ deptKey }  
         order by is_notice desc ,key desc
  	</select>
  	
  	<select id="boardTeamSearch2" resultMap="boardTeam">
  	select
    		P.*,
			    (select 
			        count(*)
			    from 
			        attachment
			    where
		        post_key = P.key) file_count,(select name from member M where M.member_id = P.mem_id) name1
		from
   			 post P
   		where categ_key=2
        and title like '%'||#{ searchKeyword }||'%' and dept_key = #{ deptKey }  
         order by is_notice desc ,key desc
  	</select>
  	
  	<select id="boardMSearch" resultMap="boardMap">
  	 select * 
        	from ( select rownum as rnum, v.* 
        			from ( select(select count(*) 
        						from attachment 
        							where post_key = P.key)file_count,P.*,(select name from member M where M.member_id = P.mem_id) name
        		from post P 
        			where categ_key=3  and title like '%'||#{ searchKeyword }||'%'
        				order by is_notice desc,key desc)v)v
        			where rnum between #{startRnum} and #{endRnum}
  	</select>
  	
  	<select id="boardMSearch2" resultMap="boardMap">
  	select * 
        	from ( select rownum as rnum, v.* 
        			from ( select(select count(*) 
        						from attachment 
        							where post_key = P.key)file_count,P.*,(select name from member M where M.member_id = P.mem_id) name
        		from post P 
        			where categ_key=3  and mem_id like '%'||#{ searchKeyword }||'%'
        				order by is_notice desc,key desc)v)v
        			where rnum between #{startRnum} and #{endRnum}
  	</select>
  	<select id="countBoard3" resultType="_int">
  	SELECT COUNT(*) as "cnt" FROM POST where categ_key=3
  	</select>
  	
  	<select id="selectTeamName" resultType="string">
  	select name from dept where key = #{deptKey}
  	<!-- select distinct D.name from post P left join dept D on P.dept_key = D.key where P.categ_key=2  and  P.dept_key = #{deptKey} -->
  	</select>
  	
  	<select id="getBoardTopFive" resultType="board"> 
  		select * 
		from(
		    select *
		    from post
		    where categ_key = 3
		    order by post_date desc
		    )
		where
		    rownum &lt;= 5
  	</select>
  
  	<select id="countTitleBoard" resultType="_int">
  	SELECT COUNT(*) as "cnt" FROM POST where categ_key=1 and title like'%'||#{ searchKeyword }||'%'
  	</select>
  	
  	<select id="countNameBoard" resultType="_int">
  	SELECT COUNT(*) as "cnt" FROM POST where categ_key=1 and mem_id like'%'||#{ searchKeyword }||'%'
  	</select>
  	
  	<select id="countTitleBoard3" resultType="_int">
  	SELECT COUNT(*) as "cnt" FROM POST where categ_key=3 and title like'%'||#{ searchKeyword }||'%'
  	</select>
  	
  	<select id="countNameBoard3" resultType="_int">
  	SELECT COUNT(*) as "cnt" FROM POST where categ_key=3 and mem_id like'%'||#{ searchKeyword }||'%'
  	</select>
  	
  	<select id="SelectBoardOne" resultType="attachment">
  	 select * from attachment where post_key= #{ key }
  	</select>
  	
  	<update id="updateAttachment">
  	update attachment set  origin_name = null, re_name = null where key= #{ boardKey }
  	</update>
  	
  	<update id="updateAttachment2">
  	update attachment set  origin_name = null, re_name = null where key= #{ boardKey2 }
  	</update>
  	
  	<update id="updateFile">
  	<selectKey order="BEFORE" resultType="attachment" keyProperty="key">
  	select key from attachment where post_key=#{ postKey } and re_name=#{ reName }
  	</selectKey>
  	update attachment set  origin_name = #{originName}, re_name = #{reName} where key= #{ key }
  	</update>
  	
  	<!-- 게시글 추천 여부 검색 -->
  	<select id="recCheck" parameterType="map" resultType="int">
  	select count(*) from good where post_key = #{key} and user_id= #{id}
  	</select>
  	<!-- 게시글 추천하기 -->
  	<insert id="recUpdate" parameterType="map">
  	insert into good
		values(seq_good_good_key.nextval,#{ id },#{ key })
  	</insert>
  	<!-- 게시글 추천 취소 -->
  	<delete id="recDelete" parameterType="map">
  	delete from good where post_key= #{ key } and user_id= #{ id }
  	</delete>
  	<!-- 추천수 -->
  	<select id="RecCount" parameterType="int" resultType="int">
  	select count(*) from good where post_key = #{ key }
  	</select>
  	
  	<!-- 덧글 한개 조회 -->
  	<select id="selectOneBoardComment" resultType="BoardComment">
  		select * from board_comment where board_comment_no = #{ key }
  	</select>
  	
  	<delete id="boardGoodDelete">
  	delete from good where post_key = #{ key }
  	</delete>
</mapper>



