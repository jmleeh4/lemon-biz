<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="om">

<!-- 여기서부터 DQL -->
	<!-- 기본 OM 리스트 조회 -->
	
	<!-- 페이징 처리 + 로그인 사용자가 수신자인 사내 메일 및 그의 첨부파일 조회 -->
	<select id="selectOMMapList" resultMap="omMap">
	SELECT * 
	FROM ( SELECT ROWNUM AS RNUM, RECEIVED.* 
	                  FROM ( SELECT ( SELECT COUNT(*)
	                                  FROM ATTACHMENT
	                                  WHERE MAIL_KEY = O.KEY) FILE_COUNT, O.*
	                  		 FROM OM O
	                  WHERE OMR_ID = #{ myId } AND IS_DONE = 1 
	                  ORDER BY OM_DATE DESC) RECEIVED) RECEIVED
	WHERE RNUM BETWEEN #{ startRnum } AND #{ endRnum }
	ORDER BY OM_DATE DESC
	</select>
	
  	<select id="countAll" resultType="_int">
  		SELECT COUNT(*) AS "CNT"
		FROM OM
		WHERE OMR_ID = #{ myId } AND IS_DONE = 1 
  	</select>
  	
  	<select id="countAtt" resultType="_int">
  		SELECT COUNT(DISTINCT A.MAIL_KEY) AS "CNT"
		FROM OM O JOIN ATTACHMENT A
		ON O.KEY = A.MAIL_KEY
		WHERE OMR_ID = #{ myId } AND IS_DONE = 1 
			  AND O.KEY = A.MAIL_KEY
  	</select>
  	
	<!-- 페이징 처리 + 로그인 사용자가 발송인인 사내 메일 및 그의 첨부파일 조회 (일괄) -->
	<select id="selectMyOMMapList" resultMap="omMap">
	SELECT * 
	FROM ( SELECT ROWNUM AS RNUM, MY.* 
	                  FROM ( SELECT ( SELECT COUNT(*)
	                                  FROM ATTACHMENT
	                                  WHERE MAIL_KEY = O.KEY) FILE_COUNT, O.*
	                  		 FROM OM O
	                  WHERE MEM_ID = #{ myId } AND IS_DONE = 1 
	                  ORDER BY OM_DATE DESC) MY) MY
	WHERE RNUM BETWEEN #{ startRnum } AND #{ endRnum }
	ORDER BY OM_DATE DESC
	</select>
	
	<select id="countMy" resultType="_int">
  		SELECT COUNT(*) AS "CNT"
		FROM OM
		WHERE MEM_ID = #{ myId } AND IS_DONE = 1
  	</select>


	<!-- 페이징 처리 + 로그인 사용자가 발송인인 사내 메일 및 그의 첨부파일 조회 (사내 ONLY) -->
	<select id="selectMyOMMapListIN" resultMap="omMap">
	SELECT * 
	FROM ( SELECT ROWNUM AS RNUM, MY.* 
	                  FROM ( SELECT ( SELECT COUNT(*)
	                                  FROM ATTACHMENT
	                                  WHERE MAIL_KEY = O.KEY) FILE_COUNT, O.*
	                  		 FROM OM O
	                  WHERE MEM_ID = #{ myId } AND IS_DONE = 1 AND IS_EXTERNAL = 0
	                  ORDER BY OM_DATE DESC) MY) MY
	WHERE RNUM BETWEEN #{ startRnum } AND #{ endRnum }
	ORDER BY OM_DATE DESC
	</select>
	
	<select id="countMyIn" resultType="_int">
  		SELECT COUNT(*) AS "CNT"
		FROM OM
		WHERE MEM_ID = #{ myId } AND IS_DONE = 1 AND IS_EXTERNAL = 0
  	</select>
	
	
	<!-- 페이징 처리 + 로그인 사용자가 발송인인 사내 메일 및 그의 첨부파일 조회 (외부 ONLY) -->
	<select id="selectMyOMMapListEX" resultMap="omMap">
	SELECT * 
	FROM ( SELECT ROWNUM AS RNUM, MY.* 
	                  FROM ( SELECT ( SELECT COUNT(*)
	                                  FROM ATTACHMENT
	                                  WHERE MAIL_KEY = O.KEY) FILE_COUNT, O.*
	                  		 FROM OM O
	                  WHERE MEM_ID = #{ myId } AND IS_DONE = 1 AND IS_EXTERNAL = 1
	                  ORDER BY OM_DATE DESC) MY) MY
	WHERE RNUM BETWEEN #{ startRnum } AND #{ endRnum }
	ORDER BY OM_DATE DESC
	</select>
	
	<select id="countMyEx" resultType="_int">
  		SELECT COUNT(*) AS "CNT"
		FROM OM
		WHERE MEM_ID = #{ myId } AND IS_DONE = 1 AND IS_EXTERNAL = 1
  	</select>
	
	<!-- 페이징 처리 + 로그인 사용자가 자신에게 발송한 사내 메일 및 그의 첨부파일 조회 -->
 	<select id="selectSelfOMMapList" resultMap="omMap">
	SELECT * 
	FROM ( SELECT ROWNUM AS RNUM, SELF.* 
	                  FROM ( SELECT ( SELECT COUNT(*)
	                                  FROM ATTACHMENT
	                                  WHERE MAIL_KEY = O.KEY) FILE_COUNT, O.*
	                  		 FROM OM O
	                  WHERE OMR_ID = #{ myId } AND IS_DONE = 1 AND MEM_ID = #{ myId } 
	                  ORDER BY OM_DATE DESC) SELF) SELF
	WHERE RNUM BETWEEN #{ startRnum } AND #{ endRnum }
	ORDER BY OM_DATE DESC
	</select>
	
	<select id="countSelf" resultType="_int">
  		SELECT COUNT(*) AS "CNT"
		FROM OM
		WHERE OMR_ID = #{ myId } AND IS_DONE = 1 AND MEM_ID = #{ myId }
  	</select>

	<resultMap type="map" id="omMap">
  		<id column="key" property="key"/>
  		<result column="mem_id" property="memId"/>
  		<result column="is_done" property="isDone"/>
  		<result column="title" property="title"/>
  		<result column="content" property="content"/>
  		<result column="om_date" property="omDate"/>
  		<result column="is_starred" property="isStarred"/>
  		<result column="is_external" property="isExternal"/>
  		<result column="read_count" property="readCount"/>
  		<result column="dept_key" property="deptKey"/>
  		<result column="omr_id" property="omrId"/>
  		<result column="file_count" property="fileCount"/>
  		<result column="startRnum" property="startRnum"/>
  		<result column="endRnum" property="endRnum"/>
  		<result column="cPage" property="cPage"/>
  		<result column="numPerPage" property="numPerPage"/>
  	</resultMap>
  	
  	  	
  	<!-- 동 부서 메일 조회: 수신자가 로그인 중인 사원 본인이면서 발신자의 부서 코드가 사용자와 동일한 메일의 조회 -->
  	<select id="selectTeamOMMapList" resultMap="omTeam">
  	SELECT * 
	FROM ( SELECT ROWNUM AS RNUM, DEP.*
	                  FROM ( SELECT ( SELECT COUNT(*)
	                                  FROM ATTACHMENT
	                                  WHERE MAIL_KEY = O.KEY) FILE_COUNT, O.*
	                  		 FROM  OM O LEFT JOIN DEPT D
	     						   ON O.DEPT_KEY  = D.KEY
	                  WHERE O.OMR_ID = #{ myId } AND O.DEPT_KEY = #{ deptKey }
	                  ORDER BY OM_DATE DESC) DEP) DEP
	WHERE RNUM BETWEEN #{ startRnum } AND #{ endRnum }
	ORDER BY OM_DATE DESC
  	</select>
  	
  	<select id="countTeam" resultType="_int">
  		SELECT COUNT(*) AS "CNT"
		FROM OM
		WHERE IS_DONE = 1
  	</select>
  	
  	<resultMap type="map" id="omTeam">
  		<id column="key" property="key"/>
  		<result column="mem_id" property="memId"/>
  		<result column="is_done" property="isDone"/>
  		<result column="title" property="title"/>
  		<result column="content" property="content"/>
  		<result column="om_date" property="omDate"/>
  		<result column="is_starred" property="isStarred"/>
  		<result column="is_external" property="isExternal"/>
  		<result column="read_count" property="readCount"/>
  		<result column="dept_key" property="deptKey"/>
  		<result column="omr_id" property="omrId"/>
  		<result column="name" property="name"/>
  		<result column="file_count" property="fileCount"/>
  		<result column="startRnum" property="startRnum"/>
  		<result column="endRnum" property="endRnum"/>
  		<result column="cPage" property="cPage"/>
  		<result column="numPerPage" property="numPerPage"/>
  	</resultMap>
  	
  	<!-- 페이징 처리 + 로그인 사용자가 수신자인 사내 메일 및 첨부파일의 수 조회 -->
	<select id="selectOMList" resultType="om">
	SELECT ROWNUM, RECEIVED.*,  (SELECT COUNT (*)
                                 FROM ATTACHMENT A
                                 WHERE A.MAIL_KEY = RECEIVED.KEY) CNT
	FROM ( SELECT * 
	              FROM OM
	              WHERE OMR_ID = #{ memId }
	              ORDER BY OM_DATE DESC ) RECEIVED
	WHERE ROWNUM BETWEEN #{startRnum} AND #{endRnum}
	ORDER BY OM_DATE DESC
	</select>
	
  	<!-- 가장 기본적인 사내 메일 INSERT 구문 -->
  	<insert id="insertOM">
	INSERT INTO OM VALUES (
	    SEQ_OM_KEY.NEXTVAL,
	    #{ memId },
	    1,
	    #{ title },
	    #{ content },
	    DEFAULT,
	    #{ isStarred },
	    0, 
	    DEFAULT,
	    #{ deptKey },
	   	#{ omrId }	 
	)
	
		<!-- 현재 시점 가장 최근에 시퀀스에서 사출된 사내메일 고유 번호 조회 -->
		<selectKey order="AFTER" resultType="_int" keyProperty="key">
			SELECT SEQ_OM_KEY.CURRVAL
			FROM DUAL
		</selectKey>
  	</insert>
  	
  	
  	<!-- INSERT 시 참고: 
  		  컬럼순 / 
  		 KEY : MEM_ID : IS_DONE : TITLE : CONTENT : OM_DATE : IS_STARRED : IS_EXTERNAL : READ_COUNT : DEPT_KEY : OMR_ID
  		  고유 번호 : 발송인 아이디 : 임시저장 여부 : 제목 : 내용 : 발송일시 : 중요 여부 : 외부 발송 여부 : 조회 여부 : 발송인 부서코드 : 수신인 아이디
  		 -->
  	
  	<!-- gmail로도 발송하는 경우 INSERT 구문 -->
  	<insert id="insertOME">
	INSERT INTO OM VALUES (
	    SEQ_OM_KEY.NEXTVAL,
	    #{ memId },
	    1,
	    #{ title },
	    #{ content },
	    DEFAULT,
	    #{ isStarred },
	    1, 
	    DEFAULT,
	    #{ deptKey },
	   	#{ omrId }	 
	)
	
		<!-- 현재 시점 가장 최근에 시퀀스에서 사출된 사내메일 고유 번호 조회 -->
		<selectKey order="AFTER" resultType="_int" keyProperty="key">
			SELECT SEQ_OM_KEY.CURRVAL
			FROM DUAL
		</selectKey>
  	</insert>
  	
  	<!-- gmail로도 발송하며 중요 메일로 설정한 경우 INSERT 구문 -->
  	<insert id="insertOMES">
	INSERT INTO OM VALUES (
	    SEQ_OM_KEY.NEXTVAL,
	    #{ memId },
	    1,
	    #{ title },
	    #{ content },
	    DEFAULT,
	    #{ isStarred },
	    1, 
	    DEFAULT,
	    #{ deptKey },
	   	#{ omrId }	 
	)
	
		<!-- 현재 시점 가장 최근에 시퀀스에서 사출된 사내메일 고유 번호 조회 -->
		<selectKey order="AFTER" resultType="_int" keyProperty="key">
			SELECT SEQ_OM_KEY.CURRVAL
			FROM DUAL
		</selectKey>
  	</insert>
  	
  	<!-- 임시 저장하는 경우 INSERT 구문 -->
  	<insert id="insertOMT">
	INSERT INTO OM VALUES (
	    SEQ_OM_KEY.NEXTVAL,
	    #{ memId },
	    0,
	    #{ title },
	    #{ content },
	    DEFAULT,
	    #{ isStarred },
	    0, 
	    DEFAULT,
	    #{ deptKey },
	   	#{ omrId }	 
	)
	
		<!-- 현재 시점 가장 최근에 시퀀스에서 사출된 사내메일 고유 번호 조회 -->
		<selectKey order="AFTER" resultType="_int" keyProperty="key">
			SELECT SEQ_OM_KEY.CURRVAL
			FROM DUAL
		</selectKey>
  	</insert>
  	
  	<!-- 중요 메일로 발송하는 경우 INSERT 구문 -->
  	<insert id="insertOMS">
	INSERT INTO OM VALUES (
	    SEQ_OM_KEY.NEXTVAL,
	    #{ memId },
	    1,
	    #{ title },
	    #{ content },
	    DEFAULT,
	    1,
	    0, 
	    DEFAULT,
	    #{ deptKey },
	   	#{ omrId }	 
	)
	
		<!-- 현재 시점 가장 최근에 시퀀스에서 사출된 사내메일 고유 번호 조회 -->
		<selectKey order="AFTER" resultType="_int" keyProperty="key">
			SELECT SEQ_OM_KEY.CURRVAL
			FROM DUAL
		</selectKey>
  	</insert>
  
	<!-- 메일 고유 번호로 첨부파일 INSERT 구문 -->  
  	<insert id="insertAttachment">
	INSERT INTO ATTACHMENT VALUES(
	    SEQ_ATTACHMENT_KEY.NEXTVAL,
	    NULL,
	    NULL,
	    NULL,
	    #{ mailKey },
	    #{ originName },
	    #{ reName },
	    DEFAULT,
	    DEFAULT
	)
  	</insert>
  	
  	<!-- 사내메일 구분자 고유 번호로 사내메일 조회 -->
  	<select id="selectOneOM" resultType="om">
		SELECT *
		FROM OM
		WHERE KEY =  #{ key }
		ORDER BY OM_DATE DESC
	</select>
	
	<!-- 첨부파일 메일 구분자 고유 번호로 첨부파일 조회 -->
	<select id="selectAttachList" resultType="attachment">
		SELECT *
		FROM ATTACHMENT
		WHERE MAIL_KEY =  #{ mailKey } 
	</select>
  
  <!-- 사내 메일과 첨부 파일을 JOIN 한 후 필요 정보를 COLLECTION에 담아 리턴 -->
  <select id="selectOneOMCollection" resultMap="omCollectionMap">
		SELECT   O.*, 
		                A.KEY AS "ATTACH_KEY",
		                A.MAIL_KEY, A.ORIGIN_NAME, A.RE_NAME,
		                A.UPLOAD_DATE, A.DOWNLOAD_CNT
		FROM OM O LEFT JOIN ATTACHMENT A 
		            ON O.KEY = A.MAIL_KEY
		WHERE O.KEY = #{ mailKey }
  </select>
  
  <resultMap type="OM" id="omCollectionMap">
  		<id column="key" property="key"/>
  		<result column="mem_id" property="memId"/>
  		<result column="is_done" property="isDone"/>
  		<result column="title" property="title"/>
  		<result column="content" property="content"/>
  		<result column="om_date" property="omDate"/>
  		<result column="is_starred" property="isStarred"/>
  		<result column="is_external" property="isExternal"/>
  		<result column="read_count" property="readCount"/>
  		<result column="dept_key" property="deptKey"/>
  		<result column="omr_id" property="omrId"/>
  		
  		<collection property="attachList" ofType="attachment">
  			<id column="attach_key" property="key"/>
  			<result column="post_key" property="postKey"/>
  			<result column="approval_key" property="appovalKey"/>
  			<result column="mem_id" property="memId"/>
  			<result column="mail_key" property="mailKey"/>
  			<result column="origin_name" property="originName"/>
  			<result column="re_name" property="reName"/>
  			<result column="upload_date" property="uploadDate"/>
  			<result column="download_cnt" property="downloadCnt"/>
  		</collection>
  		
  		<collection property="omrList" ofType="member">
  			<id column="member_id" property="memberId"/>
  			<result column="dept_key" property="deptKey" />
  			<result column="rank_key" property="rankKey" />
  			<result column="name" property="name" />
  			<result column="email" property="email" />
  			<result column="email_pwd" property="emailPwd" />
  			<result column="dept_name" property="deptName" />
  			<result column="rank_name" property="rankName" />
  		</collection>
  	</resultMap>
  	
  	<!-- 첨부파일 고유 번호로 단일 첨부 파일을 선택 -->
  	<select id="selectOneAttachment" resultType="attachment">
		SELECT *
		FROM ATTACHMENT
		WHERE KEY = #{ key }
  	</select>
  	
  	<!-- 읽음 확인용 조회수 증가 UDPATE 구문 -->
  	<update id="increaseReadConut">
		UPDATE  OM SET
                READ_COUNT = READ_COUNT +1
                WHERE KEY = #{ key }
  	</update>

	<!-- 고유 구분 코드가 일치하는 사내 메일을 삭제 -->
  	<delete id="omfrmDelete">
  		DELETE FROM OM
		WHERE KEY = #{ key }
  	</delete>
  	
  	<!-- 메일 고유 코드를 기준으로 첨부파일 삭제 -->
  	<delete id="omFileDelete">
  		DELETE FROM ATTACHMENT
		WHERE MAIL_KEY = #{ key }
  	</delete>
<!-- 여기까지 분류별 TOTALCONTENTS 채번 -->
  		
  	<!-- 같은 부서 인원 전원에게 메일 발송 기능으로 변경할 건데 우선 보류 -->
  	<insert id="insertTeamOM">
  		insert into
			om
		values(
			seq_om_key.nextval,
			#{ memId },
			2,
			#{ title },
			#{ content },
			default,
			#{ isStarred },
			default,
			default,
			#{ deptKey },
			#{ omrId }	
		)	
		<selectKey order="AFTER" resultType="_int" keyProperty="key">
			select
				seq_om_key.currval
			from 
				dual
		</selectKey>
  	</insert>

  	<select id="selectTeamName" resultType="string">
  	select distinct D.name from om P left join dept D on P.dept_key = D.key where P.is_done=2  and  P.dept_key = #{deptKey}
  	</select>

<!-- 여기서부터 jstree 관련  -->
<select id="selectDeptList" resultMap="deptMap">
		select
	    	*
		from
	    	dept
		<where>
	    	dept_level=1
		</where>
	</select>
	
	<select id="selectChild" resultMap="deptMap">
		select
			*
		from
			dept
		where
			dept_level=2
	</select>
	
	<select id="selectChild2" resultMap="deptMap">
		select
			*
		from
			dept
		where
			dept_level=3
	</select>
	
	<select id="memberList" resultMap="memberMap">
        SELECT
	    M.*,
	    (select name from dept D2 where M.dept_key = D2.key) "dept_name",
	    (select name from rank R2 where M.rank_key = R2.key) "rank_name"
		FROM MEMBER M FULL OUTER JOIN DEPT D
		ON M.DEPT_KEY = D.KEY
		WHERE D.NAME = #{node}
	</select>
	
	<select id="selectMember" resultMap="memberMap">
		SELECT
		M.*,
        D.key,
        D.ref,
        D.name as deptName,
        (select name from rank R2 where M.rank_key = R2.key) "rank_name"
		FROM MEMBER M FULL OUTER JOIN DEPT D
		ON M.DEPT_KEY = D.KEY
		WHERE M.MEMBER_ID = #{param}
	</select>
	
	<select id="joinMemberList" resultMap="memberMap">
		SELECT
		*
		FROM MEMBER M FULL OUTER JOIN DEPT D
		ON M.DEPT_KEY = D.KEY
		WHERE M.NAME = #{param}
	</select>
	
	<select id="SeqApprKey" resultType="String">
	select seq_appr_key.nextval from dual
	</select>

  <resultMap type="dept" id="deptMap">
  
  </resultMap>
  
  <resultMap type="member" id="memberMap">
  
  </resultMap>
  
  <select id="getCountNoReadMail" resultType="int">
		select 
			count(*)
		from
			om
		where 
			omr_id = #{ memberId }
		and 
			read_count = '0'
	</select>

</mapper>

